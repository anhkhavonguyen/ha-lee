// <auto-generated />
using System;
using Harvey.Activity.Application;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Harvey.Activity.Api.Migrations
{
    [DbContext(typeof(HarveyActivityDbContext))]
    [Migration("20180627062628_InitialMigrationActivityDatabase")]
    partial class InitialMigrationActivityDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Harvey.Activity.Application.Entities.ActionActivity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ActionAreaId");

                    b.Property<string>("ActionTypeId");

                    b.Property<string>("Comment");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("Harvey.Activity.Application.Entities.ActionType", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ActionActivityId");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<string>("Name");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("ActionActivityId")
                        .IsUnique();

                    b.ToTable("ActionTypies");
                });

            modelBuilder.Entity("Harvey.Activity.Application.Entities.AreaActivity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ActionActivityId");

                    b.Property<string>("AreaPath");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("ActionActivityId")
                        .IsUnique();

                    b.ToTable("AreaActivities");
                });

            modelBuilder.Entity("Harvey.Activity.Application.Entities.ErrorLogEntry", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Caption");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Detail");

                    b.Property<string>("ErrorTypeId");

                    b.Property<int>("Source");

                    b.HasKey("Id");

                    b.ToTable("ErrorLogEntries");
                });

            modelBuilder.Entity("Harvey.Activity.Application.Entities.ErrorLogType", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<int>("TypeName");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("ErrorLogTypies");
                });

            modelBuilder.Entity("Harvey.Activity.Application.Entities.ActionType", b =>
                {
                    b.HasOne("Harvey.Activity.Application.Entities.ActionActivity", "ActionActivity")
                        .WithOne("ActionType")
                        .HasForeignKey("Harvey.Activity.Application.Entities.ActionType", "ActionActivityId");
                });

            modelBuilder.Entity("Harvey.Activity.Application.Entities.AreaActivity", b =>
                {
                    b.HasOne("Harvey.Activity.Application.Entities.ActionActivity", "ActionActivity")
                        .WithOne("AreaActivity")
                        .HasForeignKey("Harvey.Activity.Application.Entities.AreaActivity", "ActionActivityId");
                });
#pragma warning restore 612, 618
        }
    }
}
