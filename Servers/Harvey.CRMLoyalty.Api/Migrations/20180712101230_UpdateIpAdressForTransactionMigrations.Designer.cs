// <auto-generated />
using System;
using Harvey.CRMLoyalty.Api;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Harvey.CRMLoyalty.Api.Migrations
{
    [DbContext(typeof(HarveyCRMLoyaltyDbContext))]
    [Migration("20180712101230_UpdateIpAdressForTransactionMigrations")]
    partial class UpdateIpAdressForTransactionMigrations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Harvey.CRMLoyalty.Application.Entities.AppSetting", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AppSettingTypeId");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<string>("GroupName");

                    b.Property<string>("Name");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("UserId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("AppSettingTypeId");

                    b.ToTable("AppSettings");
                });

            modelBuilder.Entity("Harvey.CRMLoyalty.Application.Entities.AppSettingType", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("TypeName");

                    b.HasKey("Id");

                    b.ToTable("AppSettingTypes");
                });

            modelBuilder.Entity("Harvey.CRMLoyalty.Application.Entities.Customer", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<DateTime?>("DateOfBirth");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<DateTime?>("JoinedDate");

                    b.Property<string>("LastName");

                    b.Property<DateTime?>("LastUsed");

                    b.Property<string>("Phone");

                    b.Property<string>("PhoneCountryCode");

                    b.Property<string>("ProfileImage");

                    b.Property<int>("Status");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Harvey.CRMLoyalty.Application.Entities.ErrorLogEntry", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Caption");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Detail");

                    b.Property<string>("ErrorTypeId");

                    b.Property<int>("Source");

                    b.HasKey("Id");

                    b.ToTable("ErrorLogEntries");
                });

            modelBuilder.Entity("Harvey.CRMLoyalty.Application.Entities.ErrorLogType", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<int>("TypeName");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("ErrorLogTypies");
                });

            modelBuilder.Entity("Harvey.CRMLoyalty.Application.Entities.MembershipTransaction", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BrowserName");

                    b.Property<string>("Comment");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<string>("CustomerId");

                    b.Property<string>("Device");

                    b.Property<DateTime?>("ExpiredDate");

                    b.Property<string>("IPAddress");

                    b.Property<int>("MembershipTypeId");

                    b.Property<string>("OutletId");

                    b.Property<string>("StaffId");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("MembershipTypeId");

                    b.HasIndex("OutletId");

                    b.HasIndex("StaffId");

                    b.ToTable("MembershipTransactions");
                });

            modelBuilder.Entity("Harvey.CRMLoyalty.Application.Entities.MembershipType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("TypeName");

                    b.HasKey("Id");

                    b.ToTable("MembershipTypes");
                });

            modelBuilder.Entity("Harvey.CRMLoyalty.Application.Entities.Outlet", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<string>("CountryCode");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<string>("OutletImage");

                    b.Property<string>("Phone");

                    b.Property<string>("PhoneCountryCode");

                    b.Property<string>("PostalCode");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Outlets");
                });

            modelBuilder.Entity("Harvey.CRMLoyalty.Application.Entities.PointTransaction", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("BalanceCredit");

                    b.Property<decimal>("BalanceDebit");

                    b.Property<decimal>("BalanceTotal");

                    b.Property<string>("BrowserName");

                    b.Property<string>("Comment");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<decimal>("Credit");

                    b.Property<string>("CustomerId");

                    b.Property<decimal>("Debit");

                    b.Property<string>("Device");

                    b.Property<DateTime?>("ExpiredDate");

                    b.Property<string>("IPAddress");

                    b.Property<string>("OutletId");

                    b.Property<int>("PointTransactionTypeId");

                    b.Property<string>("StaffId");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<bool>("Voided");

                    b.Property<string>("VoidedById");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("OutletId");

                    b.HasIndex("PointTransactionTypeId");

                    b.HasIndex("StaffId");

                    b.HasIndex("VoidedById");

                    b.ToTable("PointTransactions");
                });

            modelBuilder.Entity("Harvey.CRMLoyalty.Application.Entities.PointTransactionType", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("TypeName");

                    b.HasKey("Id");

                    b.ToTable("PointTransactionType");
                });

            modelBuilder.Entity("Harvey.CRMLoyalty.Application.Entities.Staff", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<DateTime?>("DateOfBirth");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<int>("Gender");

                    b.Property<string>("LastName");

                    b.Property<string>("Phone");

                    b.Property<string>("PhoneCountryCode");

                    b.Property<string>("ProfileImage");

                    b.Property<int>("TypeOfStaff");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("Harvey.CRMLoyalty.Application.Entities.Staff_Outlet", b =>
                {
                    b.Property<string>("StaffId");

                    b.Property<string>("OutletId");

                    b.Property<string>("Id");

                    b.HasKey("StaffId", "OutletId");

                    b.HasIndex("OutletId");

                    b.ToTable("Staff_Outlets");
                });

            modelBuilder.Entity("Harvey.CRMLoyalty.Application.Entities.WalletTransaction", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("BalanceCredit");

                    b.Property<decimal>("BalanceDebit");

                    b.Property<decimal>("BalanceTotal");

                    b.Property<string>("BrowserName");

                    b.Property<string>("Comment");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<decimal>("Credit");

                    b.Property<string>("CustomerId");

                    b.Property<decimal>("Debit");

                    b.Property<string>("Device");

                    b.Property<string>("IPAddress");

                    b.Property<string>("OutletId");

                    b.Property<string>("StaffId");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<bool>("Voided");

                    b.Property<string>("VoidedById");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("OutletId");

                    b.HasIndex("StaffId");

                    b.HasIndex("VoidedById");

                    b.ToTable("WalletTransactions");
                });

            modelBuilder.Entity("Harvey.CRMLoyalty.Application.Entities.AppSetting", b =>
                {
                    b.HasOne("Harvey.CRMLoyalty.Application.Entities.AppSettingType", "AppSettingType")
                        .WithMany("AppSettings")
                        .HasForeignKey("AppSettingTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Harvey.CRMLoyalty.Application.Entities.MembershipTransaction", b =>
                {
                    b.HasOne("Harvey.CRMLoyalty.Application.Entities.Customer", "Customer")
                        .WithMany("MembershipTransactions")
                        .HasForeignKey("CustomerId");

                    b.HasOne("Harvey.CRMLoyalty.Application.Entities.MembershipType", "MembershipType")
                        .WithMany("MembershipTransactions")
                        .HasForeignKey("MembershipTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Harvey.CRMLoyalty.Application.Entities.Outlet", "Outlet")
                        .WithMany("MembershipTransactions")
                        .HasForeignKey("OutletId");

                    b.HasOne("Harvey.CRMLoyalty.Application.Entities.Staff", "Staff")
                        .WithMany("MembershipTransactions")
                        .HasForeignKey("StaffId");
                });

            modelBuilder.Entity("Harvey.CRMLoyalty.Application.Entities.PointTransaction", b =>
                {
                    b.HasOne("Harvey.CRMLoyalty.Application.Entities.Customer", "Customer")
                        .WithMany("PointTransactions")
                        .HasForeignKey("CustomerId");

                    b.HasOne("Harvey.CRMLoyalty.Application.Entities.Outlet", "Outlet")
                        .WithMany("PointTransactions")
                        .HasForeignKey("OutletId");

                    b.HasOne("Harvey.CRMLoyalty.Application.Entities.PointTransactionType", "PointTransactionType")
                        .WithMany("PointTransactions")
                        .HasForeignKey("PointTransactionTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Harvey.CRMLoyalty.Application.Entities.Staff", "Staff")
                        .WithMany("PointTransactions")
                        .HasForeignKey("StaffId")
                        .HasConstraintName("FK_PointTransaction_Staff")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Harvey.CRMLoyalty.Application.Entities.Staff", "VoidedBy")
                        .WithMany("VoidedPointTransactions")
                        .HasForeignKey("VoidedById")
                        .HasConstraintName("FK_VoidedPointTransaction_Staff")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("Harvey.CRMLoyalty.Application.Entities.Staff_Outlet", b =>
                {
                    b.HasOne("Harvey.CRMLoyalty.Application.Entities.Outlet", "Outlet")
                        .WithMany("Staff_Outlets")
                        .HasForeignKey("OutletId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Harvey.CRMLoyalty.Application.Entities.Staff", "Staff")
                        .WithMany("Staff_Outlets")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Harvey.CRMLoyalty.Application.Entities.WalletTransaction", b =>
                {
                    b.HasOne("Harvey.CRMLoyalty.Application.Entities.Customer", "Customer")
                        .WithMany("WalletTransactions")
                        .HasForeignKey("CustomerId");

                    b.HasOne("Harvey.CRMLoyalty.Application.Entities.Outlet", "Outlet")
                        .WithMany("WalletTransactions")
                        .HasForeignKey("OutletId");

                    b.HasOne("Harvey.CRMLoyalty.Application.Entities.Staff", "Staff")
                        .WithMany("WalletTransactions")
                        .HasForeignKey("StaffId")
                        .HasConstraintName("FK_WalletTransaction_Staff")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Harvey.CRMLoyalty.Application.Entities.Staff", "VoidedBy")
                        .WithMany("VoidedWalletTransactions")
                        .HasForeignKey("VoidedById")
                        .HasConstraintName("FK_VoidedWalletTransaction_Staff")
                        .OnDelete(DeleteBehavior.SetNull);
                });
#pragma warning restore 612, 618
        }
    }
}
